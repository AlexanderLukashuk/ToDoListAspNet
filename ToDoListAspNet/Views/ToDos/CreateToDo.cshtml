@model ToDoListAspNetLibrary.Models.Entities.ToDo

@{
    ViewData["Title"] = "CreateToDo";
}

@*<h1>Create</h1>

    <h4>Car</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="CreateToDo">

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DeadLine" class="control-label"></label>
                <select asp-for="DeadLine" class="form-control"></select>
                <span asp-validation-for="DeadLine" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ToDoStatus" class="control-label"></label>
                <input asp-for="ToDoStatus" class="form-control" />
                <span asp-validation-for="ToDoStatus" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="CreateToDo" class="btn btn-primary" />
            </div>*@
@*<h1>Hello from create page</h1>
    <label for="fname">First name:</label>
    <input type="text" id="fname" name="fname"><br><br>
    <label for="lname">Last name:</label>
    <input type="text" id="lname" name="lname"><br><br>
    <input type="submit" value="Submit">*@
@*</form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10" style="color:green">
            @ViewBag.Message
        </div>
    </div>*@

@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Add Employee</h4>
        <div>
            @Html.ActionLink("Back to Employee List", "Index")
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeadLine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeadLine, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeadLine, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ToDoStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ToDoStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToDoStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="color:green">
                @ViewBag.Message

            </div>
        </div>
    </div>

    @if (TempData["Message"] != null)
    {
        <script type="text/javascript">
        window.onload = function() {
            alert("@(TempData["Message"] as string)");
        };
        </script>
    }

}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@

<!--<h2>Adding ToDo</h2>
<form asp-action="CreateToDo">
    <p>
        <label asp-for="Name">Name</label><br />
        <input type="text" asp-for="Name" />
    </p>
    <p>
        <label asp-for="Description">Description</label><br />
        <input type="text" asp-for="Description" />
    </p>-->
    @*<p>
            <label asp-for="DeadLine">DeadLine</label><br />
            <input type="datetime" asp-for="DeadLine" />
        </p>*@
    <!--<div class="form-group">
        @Html.LabelFor(model => model.DeadLine, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeadLine, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeadLine, "", new { @class = "text-danger" })
        </div>
    </div>
    <p>
        <label asp-for="ToDoStatus">ToDo Status</label><br />
        <input type="text" asp-for="ToDoStatus" />
    </p>
    <p>
        <input type="submit" value="Send" />
    </p>
</form>-->

<form asp-action="CreateToDo" id="form-action" method="post" class="form-horizontal" role="form">
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="row justify-content-center">
        <div class="col-xl-6 col-lg-8 col-md-8 col-sm-10">
            <label asp-for="Name" class="form-label"></label>
            <input asp-for="Id" type="hidden" class="form-control" />
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
            @*@if (ViewData.ModelState.ContainsKey("Name") && ViewData.ModelState["Name"].Errors.Any(e => e.ErrorMessage == "The Name field is required."))
            {
                <span class="text-danger">The name should not be empty.</span>
            }*@

            <label asp-for="Description" class="form-label"></label>
            <input asp-for="Description" class="form-control" />
            <span asp-validation-for="Description" class="text-danger"></span>

            <label asp-for="DeadLine" class="form-label"></label>
            <input asp-for="DeadLine" class="form-control" />
            <span asp-validation-for="DeadLine" class="text-danger"></span>
            @*@if (ViewData.ModelState.ContainsKey("DeadLine") && ViewData.ModelState["DeadLine"].Errors.Any(e => e.ErrorMessage == "The DeadLine field is required."))
            {
                <span class="text-danger">The Deadline should not be empty.</span>
            }*@

        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-xl-6 col-lg-8 col-md-8 col-sm-10 mt-3 mb-5">
            <input type="submit" id="form-button" class="btn btn-success" value="Add Todo" />
        </div>
    </div>

</form>